window.jest_html_reporters_callback__({"numFailedTestSuites":1,"numFailedTests":5,"numPassedTestSuites":0,"numPassedTests":7,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":1,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":12,"startTime":1683685621394,"success":false,"testResults":[{"numFailingTests":5,"numPassingTests":7,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1683685629574,"runtime":8066,"slow":true,"start":1683685621508},"testFilePath":"C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CustomWorldcup_back\\__tests__\\integration\\worldcups.integration.spec.js","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mWorldcups Domain 통합 테스트 › POST /api/auth/signup API (signup) Integration Test\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m200\u001b[39m\n    Received: \u001b[31m404\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 48 |\u001b[39m     \u001b[90m// 1. API를 호출하였을 때, 성공적으로 실행할 경우 200 Http Status Code를 반환한다.\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 49 |\u001b[39m     \u001b[90m// 2. 여기서 signupData { nickname, password, email }의 객체 형태를 가집니다.\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 50 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoEqual(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 51 |\u001b[39m     expect(response\u001b[33m.\u001b[39mbody)\u001b[33m.\u001b[39mtoEqual({\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 52 |\u001b[39m       signupData\u001b[33m:\u001b[39m signupRequestBodyParams\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 53 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/integration/worldcups.integration.spec.js\u001b[39m\u001b[0m\u001b[2m:50:29)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mWorldcups Domain 통합 테스트 › POST /api/auth/login API (login) Integration Test\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m200\u001b[39m\n    Received: \u001b[31m404\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 68 |\u001b[39m     \u001b[90m// 1. API를 호출하였을 때, 성공적으로 실행할 경우 200 Http Status Code를 반환한다.\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 69 |\u001b[39m     \u001b[90m// 2. API 호출이 완료되면, Authorization과 refreshtoken 값을 cookie와 body 데이터로 전달한다.\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 70 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoEqual(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 71 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 72 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 73 |\u001b[39m   test(\u001b[32m\"POST /api/worldcup API (createWorldcup) Integration Test Success Case\"\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/integration/worldcups.integration.spec.js\u001b[39m\u001b[0m\u001b[2m:70:29)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mWorldcups Domain 통합 테스트 › POST /api/worldcup API (createWorldcup) Integration Test Success Case\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m201\u001b[39m\n    Received: \u001b[31m403\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  96 |\u001b[39m     \u001b[90m// 2-1. API의 Response는 { newWorldcup: newWorldcup }의 형식을 가집니다.\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  97 |\u001b[39m     \u001b[90m// 2-2. 여기서 newWorldcup { worldcup_id, user_id, title, content, choices }의 객체 형태를 가집니다.\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m  98 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoEqual(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  99 |\u001b[39m     expect(response\u001b[33m.\u001b[39mbody)\u001b[33m.\u001b[39mtoMatchObject({\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 100 |\u001b[39m       newWorldcup\u001b[33m:\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 101 |\u001b[39m         worldcup_id\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/integration/worldcups.integration.spec.js\u001b[39m\u001b[0m\u001b[2m:98:29)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mWorldcups Domain 통합 테스트 › POST /api/worldcup API (createWorldcup) Integration Test Error Case, Invalid Params Error\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m412\u001b[39m\n    Received: \u001b[31m403\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 124 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 125 |\u001b[39m     \u001b[90m// 1. API를 호출하였을 때, InvalidParamsError가 발생하여 400 Http Status Code를 반환합니다.\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 126 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoEqual(\u001b[35m412\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 127 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 128 |\u001b[39m     \u001b[90m// 2. API의 Response는 { errorMessage: \"InvalidParamsError\" }의 형식을 가집니다.\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 129 |\u001b[39m     expect(response\u001b[33m.\u001b[39mbody)\u001b[33m.\u001b[39mtoMatchObject({ errorMessage\u001b[33m:\u001b[39m \u001b[32m\"InvalidParamsError\"\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/integration/worldcups.integration.spec.js\u001b[39m\u001b[0m\u001b[2m:126:29)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mWorldcups Domain 통합 테스트 › GET /api/worldcup API (getAllWorldcups) Integration Test Success Case, Existing Worldcups Data\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m200\u001b[39m\n    Received: \u001b[31m404\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 155 |\u001b[39m     \u001b[90m// 2. API의 Response는 1개의 데이터를 생성한 상태이므로 { worldcups: [ { worldcup_id, user_id, nickname, title, content, likes, play_count, createdAt, updatedAt, choices }] }의 형태를 가진다.\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 156 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 157 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoEqual(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 158 |\u001b[39m     expect(response\u001b[33m.\u001b[39mbody)\u001b[33m.\u001b[39mtoMatchObject({\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 159 |\u001b[39m       worldcups\u001b[33m:\u001b[39m [\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 160 |\u001b[39m         {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__tests__/integration/worldcups.integration.spec.js\u001b[39m\u001b[0m\u001b[2m:157:29)\u001b[22m\u001b[2m\u001b[22m\n\n\n  \u001b[1m● \u001b[22mTest suite failed to run\n\n    listen EADDRINUSE: address already in use :::3000\n\n    \u001b[0m \u001b[90m 45 |\u001b[39m app\u001b[33m.\u001b[39muse(errorHandler)\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 46 |\u001b[39m\u001b[0m\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 47 |\u001b[39m app\u001b[33m.\u001b[39mlisten(port\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n    \u001b[0m \u001b[90m    |\u001b[39m     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 48 |\u001b[39m   console\u001b[33m.\u001b[39mlog(\u001b[32m`running http://localhost:${port}`\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 49 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 50 |\u001b[39m\u001b[0m\n\n      \u001b[2mat Function.listen (\u001b[22mnode_modules/express/lib/application.js\u001b[2m:635:24)\u001b[22m\n      \u001b[2mat Object.listen (\u001b[22mapp.js\u001b[2m:47:5)\u001b[22m\n      \u001b[2mat Object.require (\u001b[22m\u001b[0m\u001b[36m__tests__/integration/worldcups.integration.spec.js\u001b[39m\u001b[0m\u001b[2m:2:13)\u001b[22m\n","testResults":[{"ancestorTitles":["Worldcups Domain 통합 테스트"],"duration":114,"failureMessages":[],"fullName":"Worldcups Domain 통합 테스트 GET /api/worldcup API (getAllWorldcups) Integration Test Error Case, Not Found Worldcups Data","status":"passed","title":"GET /api/worldcup API (getAllWorldcups) Integration Test Error Case, Not Found Worldcups Data"},{"ancestorTitles":["Worldcups Domain 통합 테스트"],"duration":147,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at Object.toEqual (C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CustomWorldcup_back\\__tests__\\integration\\worldcups.integration.spec.js:50:29)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"],"fullName":"Worldcups Domain 통합 테스트 POST /api/auth/signup API (signup) Integration Test","status":"failed","title":"POST /api/auth/signup API (signup) Integration Test"},{"ancestorTitles":["Worldcups Domain 통합 테스트"],"duration":8,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at Object.toEqual (C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CustomWorldcup_back\\__tests__\\integration\\worldcups.integration.spec.js:70:29)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"],"fullName":"Worldcups Domain 통합 테스트 POST /api/auth/login API (login) Integration Test","status":"failed","title":"POST /api/auth/login API (login) Integration Test"},{"ancestorTitles":["Worldcups Domain 통합 테스트"],"duration":17,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n    at Object.toEqual (C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CustomWorldcup_back\\__tests__\\integration\\worldcups.integration.spec.js:98:29)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"],"fullName":"Worldcups Domain 통합 테스트 POST /api/worldcup API (createWorldcup) Integration Test Success Case","status":"failed","title":"POST /api/worldcup API (createWorldcup) Integration Test Success Case"},{"ancestorTitles":["Worldcups Domain 통합 테스트"],"duration":13,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m412\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n    at Object.toEqual (C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CustomWorldcup_back\\__tests__\\integration\\worldcups.integration.spec.js:126:29)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"],"fullName":"Worldcups Domain 통합 테스트 POST /api/worldcup API (createWorldcup) Integration Test Error Case, Invalid Params Error","status":"failed","title":"POST /api/worldcup API (createWorldcup) Integration Test Error Case, Invalid Params Error"},{"ancestorTitles":["Worldcups Domain 통합 테스트"],"duration":38,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at Object.toEqual (C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CustomWorldcup_back\\__tests__\\integration\\worldcups.integration.spec.js:157:29)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"],"fullName":"Worldcups Domain 통합 테스트 GET /api/worldcup API (getAllWorldcups) Integration Test Success Case, Existing Worldcups Data","status":"failed","title":"GET /api/worldcup API (getAllWorldcups) Integration Test Success Case, Existing Worldcups Data"},{"ancestorTitles":["Worldcups Domain 통합 테스트"],"duration":1,"failureMessages":[],"fullName":"Worldcups Domain 통합 테스트 GET /api/worldcup/:worldcup_id API (getOneWorldcup) Integration Test Success Case, Not Found Worldcups Data","status":"passed","title":"GET /api/worldcup/:worldcup_id API (getOneWorldcup) Integration Test Success Case, Not Found Worldcups Data"},{"ancestorTitles":["Worldcups Domain 통합 테스트"],"duration":0,"failureMessages":[],"fullName":"Worldcups Domain 통합 테스트 GET /api/worldcup/:worldcup_id API (getOneWorldcup) Integration Test Success Case, Existing Worldcups Data","status":"passed","title":"GET /api/worldcup/:worldcup_id API (getOneWorldcup) Integration Test Success Case, Existing Worldcups Data"},{"ancestorTitles":["Worldcups Domain 통합 테스트"],"duration":1,"failureMessages":[],"fullName":"Worldcups Domain 통합 테스트 PATCH /api/worldcup/:worldcup_id API (updateWorldcup) Integration Test Success Case","status":"passed","title":"PATCH /api/worldcup/:worldcup_id API (updateWorldcup) Integration Test Success Case"},{"ancestorTitles":["Worldcups Domain 통합 테스트"],"duration":1,"failureMessages":[],"fullName":"Worldcups Domain 통합 테스트 PATCH /api/worldcup/:worldcup_id (updateWorldcup) Integration Test Error Case, Invalid Params Error","status":"passed","title":"PATCH /api/worldcup/:worldcup_id (updateWorldcup) Integration Test Error Case, Invalid Params Error"},{"ancestorTitles":["Worldcups Domain 통합 테스트"],"duration":0,"failureMessages":[],"fullName":"Worldcups Domain 통합 테스트 DELETE /api/worldcup/:worldcup_id API (deleteWorldcup) Integration Test Success Case","status":"passed","title":"DELETE /api/worldcup/:worldcup_id API (deleteWorldcup) Integration Test Success Case"},{"ancestorTitles":["Worldcups Domain 통합 테스트"],"duration":0,"failureMessages":[],"fullName":"Worldcups Domain 통합 테스트 DELETE /api/worldcup/:worldcup_id (deleteWorldcup) Integration Test Error Case, Not Found Worldcups Data Error","status":"passed","title":"DELETE /api/worldcup/:worldcup_id (deleteWorldcup) Integration Test Error Case, Not Found Worldcups Data Error"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":false,"collectCoverageFrom":[],"coverageDirectory":"C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CustomWorldcup_back\\coverage","coverageProvider":"babel","coverageReporters":["json","text","lcov","clover"],"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":true,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":15,"noStackTrace":false,"nonFlagArgs":["__tests__/integration"],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CustomWorldcup_back\\node_modules\\jest-html-reporters\\index.js",{"publicPath":"./utils/jest-test-report","filename":"report.html","openReport":true,"includeFailureMsg":true}]],"rootDir":"C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CustomWorldcup_back","runTestsByPath":false,"seed":1787143153,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPattern":"__tests__\\\\integration","testSequencer":"C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CustomWorldcup_back\\node_modules\\@jest\\test-sequencer\\build\\index.js","updateSnapshot":"new","useStderr":false,"verbose":true,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false},"endTime":1683685629596,"_reporterOptions":{"publicPath":"./utils/jest-test-report","filename":"report.html","expand":false,"pageTitle":"","hideIcon":false,"testCommand":"","openReport":true,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"includeFailureMsg":true},"logInfoMapping":{},"attachInfos":{}})